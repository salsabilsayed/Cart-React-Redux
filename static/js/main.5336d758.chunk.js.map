{"version":3,"sources":["components/views/Container.jsx","components/layout/Navbar.jsx","components/layout/Item.jsx","redux/actions.js","components/layout/ItemList.jsx","components/views/Title.jsx","components/views/Total.jsx","components/views/Button.jsx","components/views/Empty.jsx","components/views/Loading.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["Container","props","className","children","Navbar","basketNumber","useSelector","state","icon","faShoppingCart","React","memo","Item","title","amount","img","price","id","dispatch","useDispatch","src","alt","type","onClick","payload","removeItem","faChevronUp","increment","faChevronDown","decrement","connect","data","fetchItems","axios","get","then","res","items","catch","error","errorMsg","message","fetchDataFailure","useEffect","Fragment","map","item","Title","Total","totalPrice","toFixed","Button","Empty","Loading","App","isEmpty","loading","initialState","cartReducer","action","forEach","accu","Number","basketNum","incIndex","incrementedData","index","decIndex","decrementedData","filter","removedItem","find","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5336d758.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = props => {\r\n    return (\r\n        <div className='container'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Container from '../views/Container';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nimport './Navbar.css';\r\n\r\nconst Navbar =()=> {\r\n    const basketNumber = useSelector(state => state.basketNumber);\r\n\r\n    return (\r\n        <nav>\r\n            <Container>\r\n                <div className='nav-container'>\r\n                    <h2>Shopping Cart</h2>\r\n                    <div className='basket'>\r\n                        <FontAwesomeIcon icon={faShoppingCart} className='cart-icon'/>\r\n                        <div className='basketNumBox'>\r\n                            <p className='basketNum'>{basketNumber}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default React.memo(Navbar);\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {increment, decrement,removeItem} from '../../redux/actions';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nimport './Item.css';\r\n\r\nconst Item= ({title,amount,img,price,id}) =>{\r\n    const dispatch = useDispatch();\r\n    \r\n    return (\r\n        <li className='parent'>\r\n\r\n            <div>\r\n                <img src={img} alt={title} className='image'/>\r\n                \r\n                <div>\r\n                    <h4>{title}</h4>\r\n                    <p className=\"price\">{price}</p>\r\n                    <button type='button'\r\n                     className='remove-btn'\r\n                     onClick={()=> dispatch(removeItem(id))}>\r\n                         remove\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className='counter-container'>\r\n                <FontAwesomeIcon icon={faChevronUp} \r\n                className='count-icon'\r\n                onClick={()=> dispatch(increment(id))}\r\n                />\r\n                <p>{amount}</p>\r\n                <FontAwesomeIcon icon={faChevronDown}\r\n                 className='count-icon'\r\n                 onClick={()=> dispatch(decrement(id))}\r\n                 />\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default React.memo(Item);\r\n","import axios from \"axios\";\r\n\r\nexport const fetchData = () => {\r\n    return {\r\n        type: 'FETCH_DATA'\r\n    }\r\n}\r\n\r\nconst fetchDataSuccess = (data) => {\r\n    return {\r\n        type: 'FETCH_DATA_SUCCESS',\r\n        payload:data\r\n    }\r\n}\r\n\r\nconst fetchDataFailure = (error) => {\r\n    return {\r\n        type: 'FETCH_DATA_FAILURE',\r\n        payload:error\r\n    }\r\n}\r\n\r\n\r\nexport const getData = (data) => {\r\n    return {\r\n        type: 'GET_DATA',\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const getTotal = () => {\r\n    return {\r\n        type: 'GET_TOTAL'\r\n    }\r\n}\r\n\r\nexport const increment = (id) => {\r\n    return {\r\n        type: 'INCREMENT',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const decrement = (id) => {\r\n    return {\r\n        type: 'DECREMENT',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const removeItem = (id) => {\r\n    return {\r\n        type: 'REMOVE_ITEM',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const clearAll = (id) => {\r\n    return {\r\n        type: 'CLEAR_ALL',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const fetchItems = () =>{\r\n    return (dispatch)=>{\r\n        dispatch(fetchData())\r\n\r\n        axios.get('https://course-api.com/react-useReducer-cart-project')\r\n        .then(res =>{\r\n            const items = res.data\r\n            dispatch(fetchDataSuccess(items));\r\n            dispatch(getTotal());\r\n        })\r\n        .catch(error =>{\r\n            const errorMsg = error.message;\r\n            dispatch(fetchDataFailure(errorMsg));\r\n        })\r\n    }\r\n}","import React,{useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchItems } from '../../redux/actions';\r\n\r\nimport Item from './Item';\r\n\r\nconst ItemList = ({fetchItems, data}) => {\r\n  \r\n      useEffect(()=>{\r\n        fetchItems();\r\n      },[fetchItems]);\r\n\r\n    return (\r\n         <React.Fragment>\r\n           <ul>\r\n                {data.map(item=> <Item \r\n                    key={item.id}\r\n                    title={item.title}\r\n                    price={item.price}\r\n                    img={item.img}\r\n                    amount={item.amount}\r\n                    id={item.id}\r\n                />)}\r\n            </ul>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data:state.data\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return{\r\n    fetchItems:()=> dispatch(fetchItems())\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ItemList)\r\n\r\n","import React from 'react';\r\nimport './Title.css';\r\n\r\nconst Title = () => {\r\n    return (\r\n        <h1>YOUR BAG</h1>\r\n    )\r\n}\r\n\r\nexport default React.memo(Title)\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport './Total.css';\r\n\r\nconst Total = () => {\r\n    const totalPrice = useSelector(state => state.totalPrice);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"border\"></div>\r\n\r\n        <div className=\"total\">\r\n          <h4>Total</h4>\r\n          <p className='totalPrice'>${totalPrice.toFixed(2)}</p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default React.memo(Total);\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { clearAll } from '../../redux/actions';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n       \r\n        <div className='btn-container'>\r\n            <button type='button' \r\n            className='btn'\r\n            onClick={()=>dispatch(clearAll())}>\r\n                clear cart\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Button);\r\n","import React from 'react';\r\nimport './Empty.css'\r\n\r\nfunction Empty() {\r\n    return (\r\n        <h4 className='empty-p'>is currently empty</h4>\r\n    )\r\n}\r\n\r\nexport default Empty;\r\n","import React from 'react';\r\nimport './Loading.css'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className='loading'>\r\n           <h2 className='loading-title'>Loading...</h2> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Container from \"./components/views/Container\";\nimport ItemList from \"./components/layout/ItemList\";\nimport Title from \"./components/views/Title\";\nimport Total from \"./components/views/Total\";\nimport Button from \"./components/views/Button\";\nimport Empty from \"./components/views/Empty\";\nimport Loading from \"./components/views/Loading\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const { isEmpty, loading } = useSelector((state) => state);\n\n  return (\n    <React.Fragment>\n      {!loading && <Navbar />}\n      {loading && <Loading />}\n      <Container>\n        {!loading && <Title />}\n        {isEmpty && <Empty />}\n        {!isEmpty && <ItemList />}\n        {!isEmpty && !loading && <Total />}\n        {!isEmpty && !loading && <Button />}\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","\r\nconst initialState = {\r\n    data: [],\r\n    loading:false,\r\n    error:'',\r\n    basketNumber:0,\r\n    totalPrice:0,\r\n    isEmpty:false\r\n}\r\n\r\nconst cartReducer = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case 'FETCH_DATA':\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n\r\n        case 'FETCH_DATA_SUCCESS':\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                data:action.payload,\r\n                error:''\r\n            }\r\n\r\n        case 'FETCH_DATA_FAILURE':\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                data:[],\r\n                error:action.payload\r\n            }\r\n\r\n        case 'GET_TOTAL':\r\n            let price=0;\r\n            state.data.forEach((accu)=> price+= Number(accu.price));\r\n\r\n            let basketNum = 0;\r\n            state.data.forEach((item)=> basketNum += item.amount);\r\n\r\n            return{\r\n                ...state,\r\n                totalPrice:price,\r\n                basketNumber:basketNum,\r\n                \r\n            }\r\n\r\n        case 'INCREMENT':\r\n            let incIndex; \r\n            let incrementedData =state.data.map((item,index)=> {\r\n                if(item.id === action.payload){\r\n                    incIndex = index\r\n                    return {...item,amount:item.amount+1}\r\n                }\r\n                return item;\r\n            })\r\n        \r\n            return {\r\n                ...state,\r\n                data: incrementedData,\r\n                basketNumber: state.basketNumber + 1,\r\n                totalPrice: state.totalPrice + Number(incrementedData[incIndex].price)\r\n            }\r\n\r\n        case 'DECREMENT': \r\n            let decIndex;\r\n            const decrementedData = state.data.map((item,index) => {\r\n                if(item.id === action.payload){\r\n                    decIndex = index;\r\n                    return {...item, amount:item.amount -1}\r\n                }\r\n                return item;\r\n            }).filter(item => item.amount !==0);\r\n\r\n            return {\r\n                ...state,\r\n                data: decrementedData,\r\n                basketNumber: state.basketNumber - 1,\r\n                totalPrice: state.totalPrice - Number(decrementedData[decIndex].price)\r\n            }\r\n\r\n        case 'REMOVE_ITEM':\r\n            const removedItem = state.data.find(item => item.id === action.payload)\r\n            return{\r\n                ...state,\r\n                basketNumber:state.basketNumber - removedItem.amount,\r\n                totalPrice:state.totalPrice - (removedItem.amount * removedItem.price),\r\n                data:state.data.filter(item=> item.id !== action.payload)\r\n            }\r\n        \r\n        case 'CLEAR_ALL':\r\n            return{\r\n                ...state,\r\n                basketNumber:0,\r\n                totalPrice:0,\r\n                data:[],\r\n                isEmpty:true\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;","import { applyMiddleware, createStore,compose } from \"redux\";\r\nimport cartReducer from \"./reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(cartReducer,compose(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}